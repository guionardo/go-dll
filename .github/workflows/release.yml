on:
  release:
    types: [created]
name: Build & Release
jobs:
  fpc-build:
    runs-on: windows-latest
    steps:
      - name: Install Lazarus        
        run: |
          curl -L -o laz32.exe https://sourceforge.net/projects/lazarus/files/Lazarus%20Windows%2032%20bits/Lazarus%202.2.4/lazarus-2.2.4-fpc-3.2.2-win32.exe/download
      - name: Install Lazarus
        run: |
          ./laz32.exe /verysilent /SUPPRESSMSGBOXES /NORESTART /SP-
      - name: List directory
        run: |
          dir c:\lazarus\fpc\3.2.2\
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Build
        run: |
          C:\lazarus\fpc\3.2.2\bin\i386-win32\fpc.exe -B -MObjFPC -Scghi -WR -O1 -g -gl -l -vewnhibq -Fi.\lib\i386-win32 -FuC:\lazarus\components\fpweb\lib\i386-win32 -FuC:\lazarus\components\sqldb\lib\i386-win32\win32 -FuC:\lazarus\components\ideintf\units\i386-win32\win32 -FuC:\lazarus\components\synedit\units\i386-win32\win32 -FuC:\lazarus\components\lazcontrols\lib\i386-win32\win32 -FuC:\lazarus\lcl\units\i386-win32\win32 -FuC:\lazarus\lcl\units\i386-win32 -FuC:\lazarus\components\freetype\lib\i386-win32 -FuC:\lazarus\components\codetools\units\i386-win32 -FuC:\lazarus\components\buildintf\units\i386-win32 -FuC:\lazarus\components\lazutils\lib\i386-win32 -FuC:\lazarus\packager\units\i386-win32 -Fu.\DLL_FPC\ -FU.\DLL_FPC\lib\i386-win32\ -FE.\DLL_FPC\ -o.\DLL_FPC.dll -dLCL -dLCLwin32 DLL_FPC.lpr
      - name: List directory
        run: |
          dir *.dll
          
  linux_build:
    needs: [fpc-build]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
          image: x1unix/go-mingw:latest
          options: -v ${{ github.workspace }}:/go/work -e GOARCH=386 -w /go/work
          run: |
            go build -v -buildmode=c-shared -o go-dll.dll .
      - name: list
        run: |
          ls -la
  build:
    needs: [fpc-build]
    runs-on: windows-latest
    steps:      
      - uses: actions/checkout@master
      - name: Build step - GO
        run: |
          echo ("GOARCH=386") >> $env:GITHUB_ENV
          echo ("CGO_ENABLED=1") >> $env:GITHUB_ENV
          echo ("GOGCCFLAGS=-m32") >> $env:GITHUB_ENV
          go build -v -buildmode=c-archive .
      - name: list
        run: |
          dir
      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: any
      - name: Build step - GCC 1
        run: |
          i686-w64-mingw32-gcc -o test go-dll.c go-dll.a -lWinMM -lntdll -lWS2_32
      # gcc -o test main.c main.a -lWinMM -lntdll -lWS2_32
      - name: list 2
        run: |
          dir
      - name: Build step - GCC 2
        run: |
          gcc -shared -pthread -o main.dll main.c main.a -lWinMM -lntdll -lWS2_32
      - name: list 3
        run: |
          dir
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dll-files
          path: |
            main.*
            go.mod
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dll-files
      - uses: wangyoucao577/go-release-action@v1.25
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goarm: 5
          # goversion: "https://dl.google.com/go/go1.13.1.linux-amd64.tar.gz"
          # project_path: "./cmd/test-binary"
          # binary_name: "test-binary"
          extra_files: main.dll main.h
      # - name: Create release
      #   uses: Roang-zero1/github-create-release-action@v2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Upload release artifacts
      #   uses: Roang-zero1/github-upload-release-artifacts-action@v2
      #   with:
      #     args: "main.dll main.h"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
