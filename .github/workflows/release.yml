on:
  release:
    types: [created]
name: Build & Release
jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build step - GO
        run: |
          echo ("GOARCH=386") >> $env:GITHUB_ENV
          echo ("CGO_ENABLED=1") >> $env:GITHUB_ENV
          echo ("GOGCCFLAGS=-m32") >> $env:GITHUB_ENV
          go build -v -buildmode=c-archive .
      - name: list
        run: |
          dir
      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: any      
      - name: Build step - GCC 1
        run: |        
          i686-w64-mingw32-gcc -o test go-dll.c go-dll.a -lWinMM -lntdll -lWS2_32
      # gcc -o test main.c main.a -lWinMM -lntdll -lWS2_32
      - name: list 2
        run: |
          dir 
      - name: Build step - GCC 2
        run: |
          gcc -shared -pthread -o main.dll main.c main.a -lWinMM -lntdll -lWS2_32      
      - name: list 3
        run: |
          dir 
      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dll-files
          path: |
            main.*
            go.mod
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dll-files
      - uses: wangyoucao577/go-release-action@v1.25
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          goarm: 5
          # goversion: "https://dl.google.com/go/go1.13.1.linux-amd64.tar.gz"
          # project_path: "./cmd/test-binary"
          # binary_name: "test-binary"
          extra_files: main.dll main.h
      # - name: Create release
      #   uses: Roang-zero1/github-create-release-action@v2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Upload release artifacts
      #   uses: Roang-zero1/github-upload-release-artifacts-action@v2
      #   with:
      #     args: "main.dll main.h"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
